import { UploadThingError, ExpandedRouteConfig } from '@uploadthing/shared';
import { UploadFileResponse } from 'uploadthing/client';
import { FileRouter, inferErrorShape, inferEndpointInput } from 'uploadthing/server';

type UploadthingComponentProps<TRouter extends FileRouter> = {
    [TEndpoint in keyof TRouter]: {
        endpoint: TEndpoint;
        onUploadProgress?: (progress: number) => void;
        onUploadBegin?: (fileName: string) => void;
        onClientUploadComplete?: (res?: UploadFileResponse[]) => void;
        onUploadError?: (error: UploadThingError<inferErrorShape<TRouter>>) => void;
    } & (undefined extends inferEndpointInput<TRouter[TEndpoint]> ? {} : {
        input: inferEndpointInput<TRouter[TEndpoint]>;
    });
}[keyof TRouter];
type EndpointMetadata = {
    slug: string;
    config: ExpandedRouteConfig;
}[];

export { EndpointMetadata as E, UploadthingComponentProps as U };
